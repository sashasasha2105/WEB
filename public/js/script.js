// === File: js/script.js - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø ===

// ==== State & Prices ====
let cameraCount = 0;
let memoryCount = 0;
let wantMemory = false;
const basePrice   = 8900;
const memoryPrice = 500;

// ==== UI Helpers ====
const priceDisplay     = () => document.getElementById('priceDisplay');
const purchaseButtons  = () => document.querySelector('.purchase-buttons');
const cookieBanner     = () => document.querySelector('.cookie-banner');
const acceptCookiesBtn = () => document.getElementById('accept-cookies');

// ==== Persist Cart State (—Ç–µ–ø–µ—Ä—å —á–µ—Ä–µ–∑ CartManager) ====
function loadCartState() {
  if (window.CartManager) {
    const data = window.CartManager.getCartData();
    cameraCount = data.cameraCount || 0;
    memoryCount = data.memoryCount || 0;
  } else {
    // Fallback –Ω–∞ —Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±
    try {
      const data = JSON.parse(localStorage.getItem('cartData') || '{}');
      cameraCount = data.cameraCount || 0;
      memoryCount = data.memoryCount || 0;
    } catch {
      cameraCount = 0;
      memoryCount = 0;
    }
  }
}

function saveCartState() {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ü–≤–µ—Ç
  const selectedColorBtn = document.querySelector('#colorOptions .option-btn.selected');
  const cartColor = selectedColorBtn?.dataset.color === 'black' ? '–ß—ë—Ä–Ω—ã–π' : '–ë–µ–ª—ã–π';

  if (window.CartManager) {
    window.CartManager.saveCartData(cameraCount, memoryCount, cartColor);
  } else {
    // Fallback –Ω–∞ —Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±
    const data = {
      cameraCount,
      memoryCount,
      cartColor
    };
    localStorage.setItem('cartData', JSON.stringify(data));

    if (window.updateCartCounter) {
      window.updateCartCounter();
    }
  }
}

// ==== Update Price Display ====
function updatePriceDisplay() {
  const dp = priceDisplay();
  if (!dp) return;
  const unit = basePrice + (wantMemory ? memoryPrice : 0);
  if (cameraCount + memoryCount === 0) {
    dp.innerHTML = `–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞:<br>${unit.toLocaleString('ru-RU')} ‚ÇΩ`;
  } else {
    const total = cameraCount * basePrice + memoryCount * memoryPrice;
    dp.innerHTML = `–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞:<br>${total.toLocaleString('ru-RU')} ‚ÇΩ`;
  }
}

// ==== Add to Cart Handler - –ò–°–ü–†–ê–í–õ–ï–ù–û ====
function addToCart() {
  console.log('[AddToCart] –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É...');
  console.log('[AddToCart] –¢–µ–∫—É—â–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –î–û:', { cameraCount, memoryCount });

  // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ö–∞–∂–¥—ã–π —Ä–∞–∑ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ –æ–¥–Ω–æ–º—É —Ç–æ–≤–∞—Ä—É, –∞ –Ω–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ 1
  cameraCount++; // –í—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞–º–µ—Ä—É
  if (wantMemory) {
    memoryCount++; // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–º—è—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞
  }

  console.log('[AddToCart] –ù–æ–≤—ã–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ü–û–°–õ–ï:', { cameraCount, memoryCount });

  updatePriceDisplay();
  saveCartState();

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  showAddToCartNotification();

  // Flying animation
  createFlyingAnimation();
}

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É
function showAddToCartNotification() {
  const notification = document.createElement('div');
  notification.style.cssText = `
    position: fixed;
    top: 20px;
    right: 20px;
    background: linear-gradient(135deg, #28a745, #20c997);
    color: white;
    padding: 16px 20px;
    border-radius: 8px;
    box-shadow: 0 8px 25px rgba(40,167,69,0.3);
    z-index: 9999;
    font-weight: 500;
    transform: translateX(100%);
    transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    max-width: 300px;
  `;

  notification.innerHTML = `
    <div style="display: flex; align-items: center; gap: 10px;">
      <span style="font-size: 1.5em;">üõí</span>
      <div>
        <div style="font-weight: 600;">–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É!</div>
        <div style="font-size: 0.9em; opacity: 0.9;">–¢–æ–≤–∞—Ä—ã: ${cameraCount + memoryCount} —à—Ç.</div>
      </div>
    </div>
  `;

  document.body.appendChild(notification);

  // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
  setTimeout(() => {
    notification.style.transform = 'translateX(0)';
  }, 100);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
  setTimeout(() => {
    notification.style.transform = 'translateX(100%)';
    setTimeout(() => {
      if (notification.parentNode) {
        notification.parentNode.removeChild(notification);
      }
    }, 400);
  }, 3000);
}

// –ê–Ω–∏–º–∞—Ü–∏—è –ª–µ—Ç—è—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞
function createFlyingAnimation() {
  const img = document.querySelector('.slider-img.active');
  if (!img) return;

  const fly = document.createElement('img');
  fly.src = img.src;
  fly.style.position = 'fixed';
  fly.style.width    = '100px';
  fly.style.zIndex   = '10000';
  fly.style.pointerEvents = 'none';

  const rect = img.getBoundingClientRect();
  const startX = rect.left + rect.width / 2 - 50;
  const startY = rect.top  + rect.height/ 2 - 50;
  fly.style.left = `${startX}px`;
  fly.style.top  = `${startY}px`;

  document.body.append(fly);

  const cartIcon = document.querySelector('.cart-icon');
  if (cartIcon) {
    const ci = cartIcon.getBoundingClientRect();
    const dx = ci.left + ci.width/2 - 50 - startX;
    const dy = ci.top  + ci.height/2 - 50 - startY;

    fly.animate([
      { transform: 'translate(0,0) scale(1)', opacity: 1 },
      { transform: `translate(${dx}px,${dy}px) scale(0) rotate(720deg)`, opacity: 0 }
    ], {
      duration: 1000,
      easing: 'ease-in-out',
      fill: 'forwards'
    }).onfinish = () => fly.remove();
  } else {
    // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω—É –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç
    setTimeout(() => fly.remove(), 1000);
  }
}

// ==== Cookie Banner Logic ====
function initCookieBanner() {
  const banner = cookieBanner();
  const btn    = acceptCookiesBtn();
  if (!banner || !btn) return;

  // –°–∫—Ä—ã–≤–∞–µ–º –±–∞–Ω–Ω–µ—Ä, –µ—Å–ª–∏ —É–∂–µ –ø—Ä–∏–Ω—è—Ç–æ
  if (localStorage.getItem('cookiesAccepted')) {
    banner.style.display = 'none';
    return;
  }
  banner.style.display = 'none';

  function onScroll() {
    const sec = document.querySelector('.purchase-section');
    if (!sec) return;
    const rect = sec.getBoundingClientRect();
    if (rect.top < window.innerHeight && rect.bottom > 0) {
      banner.style.display = 'flex';
      window.removeEventListener('scroll', onScroll);
    }
  }
  window.addEventListener('scroll', onScroll);

  btn.addEventListener('click', () => {
    localStorage.setItem('cookiesAccepted','true');
    banner.style.display = 'none';
  });
}

// ==== Slider ====
const slides = document.querySelectorAll('.slider-img');
let currentSlide = 0;
function showSlide(i) {
  slides.forEach((s, idx) => s.classList.toggle('active', idx === i));
}
function prevSlide() {
  currentSlide = (currentSlide - 1 + slides.length) % slides.length;
  showSlide(currentSlide);
}
function nextSlide() {
  currentSlide = (currentSlide + 1) % slides.length;
  showSlide(currentSlide);
}

// ==== Header scroll effect ====
function initHeaderScroll() {
  const header = document.querySelector('header');
  const hero   = document.querySelector('.hero-gif');
  window.addEventListener('scroll', () => {
    if (!header) return;
    const threshold = hero ? hero.offsetHeight : 0;
    header.classList.toggle('scrolled', window.scrollY > threshold);
  });
}

// ==== Tabs ====
const tabIds = ['charTableContainer', 'faqContainer', 'shippingContainer'];
function toggleTab(id) {
  tabIds.forEach(other => {
    const cnt = document.getElementById(other);
    const hdr = cnt?.closest('.tab-item')?.querySelector('.tab-header');
    if (!cnt || !hdr) return;
    const open = (other === id) && !cnt.classList.contains('open');
    cnt.classList.toggle('open', open);
    hdr.classList.toggle('opened', open);
  });
}
function toggleCharacteristics() { toggleTab('charTableContainer'); }
function toggleFAQ()             { toggleTab('faqContainer'); }
function toggleShipping()        { toggleTab('shippingContainer'); }

// ==== Initialization ====
document.addEventListener('DOMContentLoaded', () => {
  // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ CartManager
  const initializeAfterCartManager = () => {
    if (window.CartManager) {
      // –°—á–∏—Ç—ã–≤–∞–µ–º –∏–∑ CartManager
      loadCartState();
      updatePriceDisplay();

      // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã
      window.addEventListener('cartUpdated', () => {
        console.log('[Script] –°–æ–±—ã—Ç–∏–µ cartUpdated –ø–æ–ª—É—á–µ–Ω–æ, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ');
        loadCartState();
        updatePriceDisplay();
      });

      console.log('[Script] CartManager –Ω–∞–π–¥–µ–Ω –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω');
    } else {
      // –ï—Å–ª–∏ CartManager –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –ø–æ–≤—Ç–æ—Ä—è–µ–º —á–µ—Ä–µ–∑ 100–º—Å
      setTimeout(initializeAfterCartManager, 100);
    }
  };

  initializeAfterCartManager();

  // Fade-in on scroll
  document.querySelectorAll('.fade-in-on-scroll').forEach(el => {
    const io = new IntersectionObserver(entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
          io.unobserve(entry.target);
        }
      });
    }, { threshold: 0.2 });
    io.observe(el);
  });

  // –¶–≤–µ—Ç –∫–∞–º–µ—Ä—ã
  document.querySelectorAll('#colorOptions .option-btn').forEach(btn => {
    btn.addEventListener('click', () => {
      document.querySelectorAll('#colorOptions .option-btn')
          .forEach(x => x.classList.remove('selected'));
      btn.classList.add('selected');
      // –ü–µ—Ä–µ—Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å –Ω–æ–≤—ã–º —Ü–≤–µ—Ç–æ–º
      saveCartState();
    });
  });

  // –ü–∞–º—è—Ç—å
  document.querySelectorAll('#memoryOptions .memory-btn').forEach(btn => {
    btn.addEventListener('click', () => {
      wantMemory = btn.dataset.memory === '8gb';
      document.querySelectorAll('#memoryOptions .memory-btn')
          .forEach(x => x.classList.remove('selected'));
      btn.classList.add('selected');
      updatePriceDisplay();
    });
  });

  // –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
  const addBtn = document.getElementById('addToCartBtn');
  if (addBtn) {
    addBtn.addEventListener('click', (e) => {
      e.preventDefault();
      console.log('[Event] –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É"');
      addToCart();
    });
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–Ω–Ω–µ—Ä–∞ cookies
  initCookieBanner();

  // –°–ª–∞–π–¥–µ—Ä —Å—Ç–∞—Ä—Ç
  if (slides.length > 0) {
    showSlide(0);
  }

  // –®–∞–ø–∫–∞ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
  initHeaderScroll();
});