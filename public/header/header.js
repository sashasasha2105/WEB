// === –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô HEADER JS –° –°–ö–†–´–¢–ò–ï–ú –õ–û–ì–û–¢–ò–ü–ê ===

class HeaderManager {
    constructor() {
        console.log('[Header] üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HeaderManager...');

        // –û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        this.header = document.getElementById('siteHeader');
        this.mobileToggle = document.querySelector('.mobile-menu-toggle');
        this.mobileMenu = document.getElementById('mobileMenu');
        this.mobileClose = document.querySelector('.mobile-close');
        this.mobileBackdrop = document.querySelector('.mobile-menu-backdrop');

        // –ë–µ–π–¥–∂–∏
        this.cartBadges = {
            desktop: document.getElementById('cartBadge'),
            mobile: document.getElementById('mobileCartBadge')
        };

        this.ordersBadges = {
            desktop: document.getElementById('ordersBadge'),
            mobile: document.getElementById('mobileOrdersBadge')
        };

        // –°–æ—Å—Ç–æ—è–Ω–∏–µ
        this.lastScroll = 0;
        this.isMenuOpen = false;
        this.scrollThreshold = 30;
        this.isMobile = window.innerWidth <= 768;
        this.isInitialized = false;

        if (!this.header) {
            console.error('[Header] ‚ùå –•–µ–¥–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!');
            return;
        }

        this.init();
    }

    init() {
        console.log('[Header] ‚úÖ –ù–∞–π–¥–µ–Ω —Ö–µ–¥–µ—Ä:', this.header.id);

        // –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        this.setupScrollHandler();
        this.setupMobileMenu();
        this.setupSmoothScroll();
        this.updateBadges();
        this.setupCartManager();

        // –ò–Ω–∏—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–æ–ª–ª–∞
        this.handleScroll();

        // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
        this.isInitialized = true;

        console.log('[Header] ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    }

    setupScrollHandler() {
        let ticking = false;

        this.handleScroll = () => {
            if (!ticking) {
                requestAnimationFrame(() => {
                    const currentScroll = window.pageYOffset;

                    if (currentScroll > this.scrollThreshold) {
                        this.header.classList.add('scrolled');
                    } else {
                        this.header.classList.remove('scrolled');
                    }

                    this.lastScroll = currentScroll;
                    ticking = false;
                });
                ticking = true;
            }
        };

        window.addEventListener('scroll', this.handleScroll, { passive: true });
        console.log('[Header] üìú Scroll handler –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }

    setupMobileMenu() {
        if (!this.mobileToggle) {
            console.warn('[Header] ‚ö†Ô∏è –ú–æ–±–∏–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return;
        }

        // –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
        this.mobileToggle.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            this.toggleMobileMenu();
        });

        this.mobileToggle.addEventListener('touchend', (e) => {
            e.preventDefault();
            e.stopPropagation();
            this.toggleMobileMenu();
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –∫–Ω–æ–ø–∫–æ–π X
        if (this.mobileClose) {
            this.mobileClose.addEventListener('click', (e) => {
                e.preventDefault();
                this.closeMobileMenu();
            });

            this.mobileClose.addEventListener('touchend', (e) => {
                e.preventDefault();
                this.closeMobileMenu();
            });
        }

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –±—ç–∫–¥—Ä–æ–ø—É
        if (this.mobileBackdrop) {
            this.mobileBackdrop.addEventListener('click', (e) => {
                e.preventDefault();
                this.closeMobileMenu();
            });

            this.mobileBackdrop.addEventListener('touchend', (e) => {
                e.preventDefault();
                this.closeMobileMenu();
            });
        }

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Å—Å—ã–ª–∫—É
        if (this.mobileMenu) {
            this.mobileMenu.addEventListener('click', (e) => {
                if (e.target.matches('a') || e.target.closest('a')) {
                    setTimeout(() => this.closeMobileMenu(), 200);
                }
            });

            // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            const mobileContent = this.mobileMenu.querySelector('.mobile-menu-content');
            if (mobileContent) {
                mobileContent.addEventListener('click', (e) => e.stopPropagation());
                mobileContent.addEventListener('touchend', (e) => e.stopPropagation());
            }
        }

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && this.isMenuOpen) {
                this.closeMobileMenu();
            }
        });

        console.log('[Header] üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ');
    }

    toggleMobileMenu() {
        this.isMenuOpen = !this.isMenuOpen;

        console.log(`[Header] üì± –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–Ω—é: ${this.isMenuOpen ? '–æ—Ç–∫—Ä—ã—Ç—å' : '–∑–∞–∫—Ä—ã—Ç—å'}`);

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –°–∫—Ä—ã–≤–∞–µ–º/–ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø
        if (this.isMenuOpen) {
            document.body.classList.add('mobile-menu-open');
        } else {
            document.body.classList.remove('mobile-menu-open');
        }

        // –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –±—É—Ä–≥–µ—Ä
        if (this.mobileToggle) {
            this.mobileToggle.classList.toggle('active', this.isMenuOpen);
            console.log(`[Header] üçî –ë—É—Ä–≥–µ—Ä –∫–Ω–æ–ø–∫–∞: ${this.isMenuOpen ? '–∞–∫—Ç–∏–≤–Ω–∞' : '–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞'}`);
        }

        // –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
        if (this.mobileMenu) {
            this.mobileMenu.classList.toggle('active', this.isMenuOpen);
            console.log(`[Header] üìã –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é: ${this.isMenuOpen ? '–ø–æ–∫–∞–∑–∞–Ω–æ' : '—Å–∫—Ä—ã—Ç–æ'}`);
        }

        // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–∫—Ä–æ–ª–ª–∞
        this.toggleBodyScroll(!this.isMenuOpen);

        // Haptic feedback –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
        if ('vibrate' in navigator && this.isMenuOpen) {
            navigator.vibrate(30);
        }

        console.log(`[Header] üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é ${this.isMenuOpen ? '–æ—Ç–∫—Ä—ã—Ç–æ' : '–∑–∞–∫—Ä—ã—Ç–æ'}`);
    }

    closeMobileMenu() {
        if (!this.isMenuOpen) return;

        console.log('[Header] üì± –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é');

        this.isMenuOpen = false;

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø –æ–±—Ä–∞—Ç–Ω–æ
        document.body.classList.remove('mobile-menu-open');

        if (this.mobileToggle) {
            this.mobileToggle.classList.remove('active');
        }

        if (this.mobileMenu) {
            this.mobileMenu.classList.remove('active');
        }

        // –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–∫—Ä–æ–ª–ª–∞
        this.toggleBodyScroll(true);

        console.log('[Header] üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ');
    }

    toggleBodyScroll(enable) {
        if (enable) {
            // –í–∫–ª—é—á–∞–µ–º —Å–∫—Ä–æ–ª–ª
            const scrollY = document.body.style.top;
            document.body.style.overflow = '';
            document.body.style.position = '';
            document.body.style.width = '';
            document.body.style.top = '';
            if (scrollY) {
                window.scrollTo(0, parseInt(scrollY || '0') * -1);
            }
        } else {
            // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª
            const scrollY = window.scrollY;
            document.body.style.overflow = 'hidden';
            document.body.style.position = 'fixed';
            document.body.style.width = '100%';
            document.body.style.top = `-${scrollY}px`;
        }
    }

    setupSmoothScroll() {
        const anchorLinks = document.querySelectorAll('a[data-section], a[href*="#"]');

        anchorLinks.forEach(link => {
            link.addEventListener('click', (e) => {
                const href = link.getAttribute('href');
                let sectionId = link.getAttribute('data-section');

                if (!sectionId && href && href.includes('#')) {
                    sectionId = href.split('#')[1];
                }

                if (sectionId) {
                    const targetElement = document.getElementById(sectionId);

                    if (targetElement) {
                        e.preventDefault();

                        // –†–∞—Å—á–µ—Ç —Å —É—á–µ—Ç–æ–º –≤—ã—Å–æ—Ç—ã —Ö–µ–¥–µ—Ä–∞
                        const headerHeight = this.header.offsetHeight || 80;
                        const targetPosition = targetElement.offsetTop - headerHeight - 20;

                        window.scrollTo({
                            top: Math.max(0, targetPosition),
                            behavior: 'smooth'
                        });

                        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
                        if (this.isMenuOpen) {
                            setTimeout(() => this.closeMobileMenu(), 100);
                        }

                        console.log(`[Header] üéØ –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Å–µ–∫—Ü–∏–∏: ${sectionId}`);
                    }
                }
            });
        });

        console.log(`[Header] üéØ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è ${anchorLinks.length} —Å—Å—ã–ª–æ–∫`);
    }

    updateBadges() {
        try {
            const cartCount = this.getCartCount();
            const ordersCount = this.getOrdersCount();

            this.setBadge(this.cartBadges, cartCount);
            this.setBadge(this.ordersBadges, ordersCount);

            console.log(`[Header] üîÑ –ë–µ–π–¥–∂–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã: –ö–æ—Ä–∑–∏–Ω–∞ ${cartCount}, –ó–∞–∫–∞–∑—ã ${ordersCount}`);
        } catch (error) {
            console.error('[Header] ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–π–¥–∂–µ–π:', error);
        }
    }

    // –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø setBadge - –£–ë–†–ê–ù–ê –í–°–Ø –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –°–¢–ò–õ–ò–ó–ê–¶–ò–Ø
    setBadge(badges, count) {
        Object.values(badges).forEach(badge => {
            if (badge) {
                badge.textContent = count;

                if (count > 0) {
                    badge.style.display = 'flex';

                    // –¢–û–õ–¨–ö–û –∞–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è - –ë–ï–ó –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ –ø–æ–∑–∏—Ü–∏–π
                    badge.style.animation = 'none';
                    badge.offsetHeight; // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π reflow
                    badge.style.animation = 'badgeEntry 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55)';
                } else {
                    badge.style.display = 'none';
                }

                // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–ï –¢–†–û–ì–ê–ï–ú –ù–ò–ö–ê–ö–ò–ï –ü–û–ó–ò–¶–ò–ò –ò –†–ê–ó–ú–ï–†–´!
                // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—é—Ç CSS
            }
        });
    }

    getCartCount() {
        // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: CartManager > localStorage > 0
        if (window.CartManager && typeof window.CartManager.getTotalCount === 'function') {
            return window.CartManager.getTotalCount();
        }

        // Fallback –∫ localStorage
        try {
            const cartData = JSON.parse(localStorage.getItem('cartData') || '{}');
            return (cartData.cameraCount || 0) + (cartData.memoryCount || 0);
        } catch (e) {
            console.warn('[Header] ‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è cartData:', e);
            return 0;
        }
    }

    getOrdersCount() {
        // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: OrderManager > localStorage > 0
        if (window.OrderManager && typeof window.OrderManager.getOrdersCount === 'function') {
            return window.OrderManager.getOrdersCount();
        }

        // Fallback –∫ localStorage
        try {
            const orders = JSON.parse(localStorage.getItem('userOrders') || '[]');
            return orders.filter(order => order && order.id).length;
        } catch (e) {
            console.warn('[Header] ‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è orders:', e);
            return 0;
        }
    }

    setupCartManager() {
        // –î–µ–±–∞—É–Ω—Å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–π–¥–∂–µ–π
        let updateTimeout = null;
        const debouncedUpdate = () => {
            if (updateTimeout) clearTimeout(updateTimeout);
            updateTimeout = setTimeout(() => this.updateBadges(), 50);
        };

        // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è
        window.addEventListener('cartUpdated', debouncedUpdate);
        window.addEventListener('ordersUpdated', debouncedUpdate);

        // –°–æ–±—ã—Ç–∏—è localStorage
        window.addEventListener('storage', (e) => {
            if (e.key === 'cartData' || e.key === 'userOrders') {
                console.log(`[Header] üíæ LocalStorage –∏–∑–º–µ–Ω–µ–Ω: ${e.key}`);
                debouncedUpdate();
            }
        });

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        window.addEventListener('focus', debouncedUpdate, { passive: true });

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ë–†–ê–ù–ê –í–°–Ø –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –°–¢–ò–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò RESIZE
        window.addEventListener('resize', () => {
            this.isMobile = window.innerWidth <= 768;
            // –¢–û–õ–¨–ö–û –æ–±–Ω–æ–≤–ª—è–µ–º –±–µ–π–¥–∂–∏ –±–µ–∑ –ª—é–±—ã—Ö —Å—Ç–∏–ª–µ–π
            setTimeout(() => this.updateBadges(), 100);
        });

        // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 20 —Å–µ–∫—É–Ω–¥
        setInterval(() => this.updateBadges(), 20000);

        console.log('[Header] üîÑ CartManager –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
    }

    // === –ü–£–ë–õ–ò–ß–ù–´–ï –ú–ï–¢–û–î–´ ===

    forceUpdateBadges() {
        console.log('[Header] üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–π–¥–∂–µ–π');
        this.updateBadges();
    }

    setCartCount(count) {
        console.log(`[Header] üõí –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã: ${count}`);
        this.setBadge(this.cartBadges, count);
    }

    setOrdersCount(count) {
        console.log(`[Header] üìã –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—á–µ—Ç—á–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤: ${count}`);
        this.setBadge(this.ordersBadges, count);
    }

    // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    get currentCartCount() {
        return this.getCartCount();
    }

    get currentOrdersCount() {
        return this.getOrdersCount();
    }

    // –ú–æ–±–∏–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    diagnoseMobile() {
        if (!this.isMobile) {
            console.log('[Header] üíª –≠—Ç–æ –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ');
            return;
        }

        console.log('[Header] üì± –ú–û–ë–ò–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:');
        console.log('- –®–∏—Ä–∏–Ω–∞ —ç–∫—Ä–∞–Ω–∞:', window.innerWidth);
        console.log('- –í—ã—Å–æ—Ç–∞ —ç–∫—Ä–∞–Ω–∞:', window.innerHeight);
        console.log('- User Agent:', navigator.userAgent);
        console.log('- –•–µ–¥–µ—Ä –Ω–∞–π–¥–µ–Ω:', !!this.header);

        if (this.header) {
            const rect = this.header.getBoundingClientRect();
            const styles = window.getComputedStyle(this.header);

            console.log('- –†–∞–∑–º–µ—Ä—ã —Ö–µ–¥–µ—Ä–∞:', {
                width: rect.width,
                height: rect.height,
                top: rect.top,
                visible: rect.width > 0 && rect.height > 0
            });

            console.log('- CSS —Å—Ç–∏–ª–∏:', {
                display: styles.display,
                position: styles.position,
                zIndex: styles.zIndex,
                visibility: styles.visibility,
                opacity: styles.opacity
            });
        }

        console.log('- –ú–æ–±–∏–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞:', !!this.mobileToggle);
        console.log('- –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é:', !!this.mobileMenu);
        console.log('- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', this.isInitialized);

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
        if (this.mobileToggle) {
            const toggleRect = this.mobileToggle.getBoundingClientRect();
            const toggleStyles = window.getComputedStyle(this.mobileToggle);

            console.log('- –ú–æ–±–∏–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Ä–∞–∑–º–µ—Ä—ã:', {
                width: toggleRect.width,
                height: toggleRect.height,
                left: toggleRect.left,
                top: toggleRect.top,
                visible: toggleRect.width > 0 && toggleRect.height > 0
            });

            console.log('- –ú–æ–±–∏–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å—Ç–∏–ª–∏:', {
                display: toggleStyles.display,
                background: toggleStyles.background,
                border: toggleStyles.border,
                zIndex: toggleStyles.zIndex
            });
        }

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–Ø –°–¢–ò–õ–ï–ô
        const cartActions = document.querySelector('.site-header .header-actions');
        const cartBtn = document.querySelector('.site-header .header-actions .cart-btn');
        const cartBadge = document.querySelector('.site-header .header-actions .cart-badge');

        if (cartActions) {
            const actionsRect = cartActions.getBoundingClientRect();
            const actionsStyles = window.getComputedStyle(cartActions);

            console.log('- –ö–æ—Ä–∑–∏–Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä:', {
                width: actionsRect.width,
                height: actionsRect.height,
                left: actionsRect.left,
                right: actionsRect.right,
                top: actionsRect.top,
                position: actionsStyles.position,
                rightStyle: actionsStyles.right,
                visible: actionsRect.width > 0 && actionsRect.height > 0,
                outsideScreen: actionsRect.right > window.innerWidth || actionsRect.left < 0
            });
        }

        if (cartBtn) {
            const btnRect = cartBtn.getBoundingClientRect();
            const btnStyles = window.getComputedStyle(cartBtn);

            console.log('- –ö–æ—Ä–∑–∏–Ω–∞ –∫–Ω–æ–ø–∫–∞:', {
                width: btnRect.width,
                height: btnRect.height,
                left: btnRect.left,
                right: btnRect.right,
                visible: btnRect.width > 0 && btnRect.height > 0,
                outsideScreen: btnRect.right > window.innerWidth || btnRect.left < 0
            });
        }

        if (cartBadge) {
            const badgeRect = cartBadge.getBoundingClientRect();
            const badgeStyles = window.getComputedStyle(cartBadge);

            console.log('- –°—á–µ—Ç—á–∏–∫ –∫–æ—Ä–∑–∏–Ω—ã:', {
                width: badgeRect.width,
                height: badgeRect.height,
                left: badgeRect.left,
                right: badgeRect.right,
                top: badgeRect.top,
                bottom: badgeRect.bottom,
                position: badgeStyles.position,
                topStyle: badgeStyles.top,
                rightStyle: badgeStyles.right,
                borderRadius: badgeStyles.borderRadius,
                display: badgeStyles.display,
                visible: badgeRect.width > 0 && badgeRect.height > 0,
                outsideScreen: badgeRect.right > window.innerWidth || badgeRect.left < 0 || badgeRect.top < 0
            });
        }

        // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ª–∏–Ω–∏–π –±—É—Ä–≥–µ—Ä–∞
        const burgerLines = document.querySelectorAll('.burger-line');
        console.log('- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏–Ω–∏–π –±—É—Ä–≥–µ—Ä–∞:', burgerLines.length);

        burgerLines.forEach((line, index) => {
            const lineRect = line.getBoundingClientRect();
            const lineStyles = window.getComputedStyle(line);

            console.log(`- –õ–∏–Ω–∏—è ${index + 1}:`, {
                width: lineRect.width,
                height: lineRect.height,
                background: lineStyles.background,
                visible: lineRect.width > 0 && lineRect.height > 0
            });
        });
    }
}

// === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===

let headerInstance = null;

function initHeader() {
    if (headerInstance && headerInstance.isInitialized) {
        console.log('[Header] ‚ö†Ô∏è –£–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return headerInstance;
    }

    try {
        console.log('[Header] üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é...');
        headerInstance = new HeaderManager();

        if (headerInstance.isInitialized) {
            // –≠–∫—Å–ø–æ—Ä—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å
            window.headerManager = headerInstance;
            window.HeaderManager = HeaderManager;

            console.log('[Header] ‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

            // –ü–µ—Ä–≤–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–π–¥–∂–µ–π
            setTimeout(() => headerInstance.forceUpdateBadges(), 300);

            // –ú–æ–±–∏–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            if (window.innerWidth <= 768) {
                setTimeout(() => headerInstance.diagnoseMobile(), 500);
            }

            return headerInstance;
        } else {
            console.error('[Header] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å');
            return null;
        }

    } catch (error) {
        console.error('[Header] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
        return null;
    }
}

// === –ê–í–¢–û–ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===

if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
        setTimeout(initHeader, 50);
    });
} else {
    setTimeout(initHeader, 100);
}

// === –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ú–û–ë–ò–õ–¨–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===

// –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
if (window.innerWidth <= 768) {
    console.log('[Header] üì± –ú–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏...');

    let mobileRetries = 0;
    const maxMobileRetries = 3;

    const mobileInit = setInterval(() => {
        if (!headerInstance || !headerInstance.isInitialized) {
            mobileRetries++;
            console.log(`[Header] üì± –ú–æ–±–∏–ª—å–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ ${mobileRetries}/${maxMobileRetries}`);
            initHeader();

            if (mobileRetries >= maxMobileRetries) {
                clearInterval(mobileInit);
                console.error('[Header] üì± –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º –ø–æ—Å–ª–µ', maxMobileRetries, '–ø–æ–ø—ã—Ç–æ–∫');
            }
        } else {
            clearInterval(mobileInit);
            console.log('[Header] üì± –ú–æ–±–∏–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
        }
    }, 300);
}

// === –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° CART-MANAGER ===

function waitForCartManager() {
    if (window.CartManager && headerInstance) {
        console.log('[Header] üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CartManager');

        // –ü–∞—Ç—á–∏–º –º–µ—Ç–æ–¥ updateCartCounter –≤ CartManager
        if (typeof window.CartManager.updateCartCounter === 'function') {
            const originalUpdate = window.CartManager.updateCartCounter.bind(window.CartManager);

            window.CartManager.updateCartCounter = function() {
                originalUpdate();
                if (headerInstance) {
                    setTimeout(() => headerInstance.updateBadges(), 50);
                }
            };

            console.log('[Header] ‚úÖ CartManager –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω');
        }

        // –ü–µ—Ä–≤–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        setTimeout(() => {
            if (headerInstance) {
                headerInstance.forceUpdateBadges();
            }
        }, 100);

    } else if (!window.CartManager) {
        setTimeout(waitForCartManager, 100);
    }
}

setTimeout(waitForCartManager, 200);

// === –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===

window.initHeader = initHeader;

window.updateHeaderBadges = function() {
    if (headerInstance && headerInstance.isInitialized) {
        headerInstance.forceUpdateBadges();
        console.log('[Header] üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ');
    } else {
        console.warn('[Header] ‚ö†Ô∏è Header –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }
};

// –ú–æ–±–∏–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
window.debugMobileHeader = function() {
    console.log('[Header] üîç === –ú–û–ë–ò–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê ===');
    console.log('–†–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞:', window.innerWidth + 'x' + window.innerHeight);
    console.log('User Agent:', navigator.userAgent);

    if (headerInstance && headerInstance.isInitialized) {
        headerInstance.diagnoseMobile();
    } else {
        console.error('[Header] ‚ùå HeaderInstance –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...');
        initHeader();
    }
};

// –ò–°–ü–†–ê–í–õ–ï–ù–û: –§—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–±–∏–ª—å–Ω–æ–π –∫–æ—Ä–∑–∏–Ω—ã –ë–ï–ó –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ô –°–¢–ò–õ–ò–ó–ê–¶–ò–ò
window.fixMobileCart = function() {
    console.log('[Header] üîß === –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ú–û–ë–ò–õ–¨–ù–û–ô –ö–û–†–ó–ò–ù–´ ===');

    // –¢–û–õ–¨–ö–û –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, –ë–ï–ó –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π
    const cartActions = document.querySelector('.site-header .header-actions');
    const cartBadge = document.querySelector('.site-header .header-actions .cart-badge');

    if (cartActions) {
        const rect = cartActions.getBoundingClientRect();
        console.log('–ö–æ—Ä–∑–∏–Ω–∞:', {
            left: rect.left,
            right: rect.right,
            width: rect.width,
            outsideScreen: rect.right > window.innerWidth
        });

        if (rect.right > window.innerWidth) {
            console.error('‚ùå –ö–æ—Ä–∑–∏–Ω–∞ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã —ç–∫—Ä–∞–Ω–∞!');
            console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ CSS –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è @media (max-width: 768px)');
        } else {
            console.log('‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —ç–∫—Ä–∞–Ω–∞');
        }
    }

    if (cartBadge) {
        const badgeRect = cartBadge.getBoundingClientRect();
        const badgeStyles = window.getComputedStyle(cartBadge);
        console.log('–°—á–µ—Ç—á–∏–∫:', {
            top: badgeRect.top,
            width: badgeRect.width,
            height: badgeRect.height,
            borderRadius: badgeStyles.borderRadius,
            isRound: badgeStyles.borderRadius === '50%' || parseFloat(badgeStyles.borderRadius) >= Math.min(badgeRect.width, badgeRect.height) / 2
        });
    }
};

// === –≠–ö–°–ü–û–†–¢ ===

if (typeof module !== 'undefined' && module.exports) {
    module.exports = { HeaderManager, initHeader };
}

console.log('[Header] üéâ –°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');