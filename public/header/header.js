// === –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô HEADER JS - –£–ë–†–ê–ù –õ–û–ì–û–¢–ò–ü –ò–ó –ú–û–ë–ò–õ–¨–ù–û–ì–û –ú–ï–ù–Æ ===

class HeaderManager {
    constructor() {
        console.log('[Header] üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HeaderManager...');

        // –ò–©–ï–ú –•–ï–î–ï–† –†–ê–ó–ù–´–ú–ò –°–ü–û–°–û–ë–ê–ú–ò
        this.header = document.getElementById('siteHeader') ||
            document.querySelector('.site-header') ||
            document.querySelector('header') ||
            document.querySelector('[id*="header"]');

        if (!this.header) {
            console.error('[Header] ‚ùå –•–µ–¥–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω! –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:');
            console.log('- –ü–æ ID siteHeader:', !!document.getElementById('siteHeader'));
            console.log('- –ü–æ –∫–ª–∞—Å—Å—É .site-header:', !!document.querySelector('.site-header'));
            console.log('- –ü–æ —Ç–µ–≥—É header:', !!document.querySelector('header'));
            console.log('- –í—Å–µ header —ç–ª–µ–º–µ–Ω—Ç—ã:', document.querySelectorAll('header').length);

            // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
            setTimeout(() => {
                this.findHeader();
            }, 500);
            return;
        }

        this.mobileToggle = document.querySelector('.mobile-menu-toggle');
        this.mobileMenu = document.getElementById('mobileMenu');
        this.mobileBackdrop = document.querySelector('.mobile-menu-backdrop');

        // –ë–µ–π–¥–∂–∏
        this.cartBadges = {
            desktop: document.getElementById('cartBadge'),
            mobile: document.getElementById('mobileCartBadge')
        };

        this.ordersBadges = {
            desktop: document.getElementById('ordersBadge'),
            mobile: document.getElementById('mobileOrdersBadge')
        };

        // –°–æ—Å—Ç–æ—è–Ω–∏–µ
        this.lastScroll = 0;
        this.isMenuOpen = false;
        this.scrollThreshold = 20; // –£–º–µ–Ω—å—à–∏–ª –ø–æ—Ä–æ–≥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è
        this.isMobile = window.innerWidth <= 768;
        this.isInitialized = false;

        this.init();
    }

    findHeader() {
        console.log('[Header] üîç –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫ —Ö–µ–¥–µ—Ä–∞...');

        this.header = document.getElementById('siteHeader') ||
            document.querySelector('.site-header') ||
            document.querySelector('header');

        if (this.header) {
            console.log('[Header] ‚úÖ –•–µ–¥–µ—Ä –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –ø–æ–∏—Å–∫–µ:', this.header.tagName, this.header.id, this.header.className);
            this.init();
        } else {
            console.error('[Header] ‚ùå –•–µ–¥–µ—Ä –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω!');

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            const allHeaders = document.querySelectorAll('header');
            const allWithSiteHeader = document.querySelectorAll('[class*="header"]');

            console.log('–ù–∞–π–¥–µ–Ω–Ω—ã–µ header —ç–ª–µ–º–µ–Ω—Ç—ã:', allHeaders.length);
            allHeaders.forEach((h, i) => {
                console.log(`  ${i + 1}. Tag: ${h.tagName}, ID: "${h.id}", Class: "${h.className}"`);
            });

            console.log('–≠–ª–µ–º–µ–Ω—Ç—ã —Å "header" –≤ –∫–ª–∞—Å—Å–µ:', allWithSiteHeader.length);
            allWithSiteHeader.forEach((h, i) => {
                console.log(`  ${i + 1}. Tag: ${h.tagName}, ID: "${h.id}", Class: "${h.className}"`);
            });
        }
    }

    init() {
        console.log('[Header] ‚úÖ –ù–∞–π–¥–µ–Ω —Ö–µ–¥–µ—Ä:', this.header.id);

        // –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        this.setupScrollHandler();
        this.setupMobileMenu();
        this.setupSmoothScroll();
        this.updateBadges();
        this.setupCartManager();

        // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –≠–∫—Å–ø–æ—Ä—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –°–†–ê–ó–£
        window.headerManager = this;
        window.HeaderManager = HeaderManager;

        // –ò–Ω–∏—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–æ–ª–ª–∞
        this.handleScroll();

        // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
        this.isInitialized = true;

        console.log('[Header] ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
        console.log('[Header] üé® Glassmorphism —ç—Ñ—Ñ–µ–∫—Ç –±—É–¥–µ—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ –±–æ–ª—å—à–µ', this.scrollThreshold, 'px');
        console.log('[Header] üîß –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: testGlassmorphism() –∏–ª–∏ window.scrollTo(0, 50)');
        console.log('[Header] üåü window.headerManager –¥–æ—Å—Ç—É–ø–µ–Ω:', !!window.headerManager);
    }

    setupScrollHandler() {
        let ticking = false;

        this.handleScroll = () => {
            if (!ticking) {
                requestAnimationFrame(() => {
                    const currentScroll = window.pageYOffset;

                    // –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ glassmorphism —ç—Ñ—Ñ–µ–∫—Ç–∞
                    if (currentScroll > this.scrollThreshold) {
                        if (!this.header.classList.contains('scrolled')) {
                            this.header.classList.add('scrolled');
                            console.log('[Header] üé® Glassmorphism –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ:', currentScroll + 'px');
                        }
                    } else {
                        if (this.header.classList.contains('scrolled')) {
                            this.header.classList.remove('scrolled');
                            console.log('[Header] üé® Glassmorphism –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ:', currentScroll + 'px');
                        }
                    }

                    this.lastScroll = currentScroll;
                    ticking = false;
                });
                ticking = true;
            }
        };

        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º scroll handler –ù–ï–ú–ï–î–õ–ï–ù–ù–û
        window.addEventListener('scroll', this.handleScroll, { passive: true });

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–∏–≤—è–∑–∫–∞ —á–µ—Ä–µ–∑ setTimeout –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏
        setTimeout(() => {
            window.addEventListener('scroll', this.handleScroll, { passive: true });
            console.log('[Header] üîÑ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–∏–≤—è–∑–∫–∞ scroll handler');
        }, 100);

        console.log('[Header] üìú Scroll handler –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å –ø–æ—Ä–æ–≥–æ–º', this.scrollThreshold, 'px');

        // –¢–ï–°–¢–ò–†–£–ï–ú –°–†–ê–ó–£
        setTimeout(() => {
            console.log('[Header] üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–æ–ª–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏...');
            const testScroll = this.scrollThreshold + 10;
            window.scrollTo(0, testScroll);

            setTimeout(() => {
                window.scrollTo(0, 0);
                console.log('[Header] ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–æ–ª–ª –∑–∞–≤–µ—Ä—à–µ–Ω');
            }, 1000);
        }, 2000);
    }

    setupMobileMenu() {
        if (!this.mobileToggle) {
            console.warn('[Header] ‚ö†Ô∏è –ú–æ–±–∏–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return;
        }

        // –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
        this.mobileToggle.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            this.toggleMobileMenu();
        });

        this.mobileToggle.addEventListener('touchend', (e) => {
            e.preventDefault();
            e.stopPropagation();
            this.toggleMobileMenu();
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –±—ç–∫–¥—Ä–æ–ø—É
        if (this.mobileBackdrop) {
            this.mobileBackdrop.addEventListener('click', (e) => {
                e.preventDefault();
                this.closeMobileMenu();
            });

            this.mobileBackdrop.addEventListener('touchend', (e) => {
                e.preventDefault();
                this.closeMobileMenu();
            });
        }

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Å—Å—ã–ª–∫—É
        if (this.mobileMenu) {
            this.mobileMenu.addEventListener('click', (e) => {
                if (e.target.matches('a') || e.target.closest('a')) {
                    setTimeout(() => this.closeMobileMenu(), 200);
                }
            });

            // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            const mobileContent = this.mobileMenu.querySelector('.mobile-menu-content');
            if (mobileContent) {
                mobileContent.addEventListener('click', (e) => e.stopPropagation());
                mobileContent.addEventListener('touchend', (e) => e.stopPropagation());
            }
        }

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && this.isMenuOpen) {
                this.closeMobileMenu();
            }
        });

        console.log('[Header] üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ');
    }

    toggleMobileMenu() {
        this.isMenuOpen = !this.isMenuOpen;

        console.log(`[Header] üì± –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–Ω—é: ${this.isMenuOpen ? '–æ—Ç–∫—Ä—ã—Ç—å' : '–∑–∞–∫—Ä—ã—Ç—å'}`);

        // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ body –∫–ª–∞—Å—Å–∞–º–∏
        if (this.isMenuOpen) {
            document.body.classList.add('mobile-menu-open');
        } else {
            document.body.classList.remove('mobile-menu-open');
        }

        // –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –±—É—Ä–≥–µ—Ä (–ø–æ–≤–æ—Ä–æ—Ç –Ω–∞ 90 –≥—Ä–∞–¥—É—Å–æ–≤)
        if (this.mobileToggle) {
            this.mobileToggle.classList.toggle('active', this.isMenuOpen);
            console.log(`[Header] üçî –ë—É—Ä–≥–µ—Ä –∫–Ω–æ–ø–∫–∞: ${this.isMenuOpen ? '–ø–æ–≤–µ—Ä–Ω—É—Ç–∞ –Ω–∞ 90¬∞' : '–≤ –∏—Å—Ö–æ–¥–Ω–æ–º –ø–æ–ª–æ–∂–µ–Ω–∏–∏'}`);

            // –ü–†–û–í–ï–†–Ø–ï–ú –ù–ê –î–£–ë–õ–ò–†–û–í–ê–ù–ò–ï
            const allMenuToggles = document.querySelectorAll('.mobile-menu-toggle');
            if (allMenuToggles.length > 1) {
                console.warn(`[Header] ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ù–∞–π–¥–µ–Ω–æ ${allMenuToggles.length} –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é! –ú–æ–∂–µ—Ç –±—ã—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ.`);
            }
        }

        // –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
        if (this.mobileMenu) {
            this.mobileMenu.classList.toggle('active', this.isMenuOpen);
            console.log(`[Header] üìã –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é: ${this.isMenuOpen ? '–ø–æ–∫–∞–∑–∞–Ω–æ' : '—Å–∫—Ä—ã—Ç–æ'}`);
        }

        // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–∫—Ä–æ–ª–ª–∞
        this.toggleBodyScroll(!this.isMenuOpen);

        // Haptic feedback –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
        if ('vibrate' in navigator && this.isMenuOpen) {
            navigator.vibrate(30);
        }

        // –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–ö–†–û–õ–õ–ê –ü–†–ò –û–¢–ö–†–´–¢–ò–ò –ú–ï–ù–Æ
        if (this.isMenuOpen && window.innerWidth <= 768) {
            setTimeout(() => {
                if (typeof window.forceEnableScroll === 'function') {
                    window.forceEnableScroll();
                }
            }, 100);
        }

        console.log(`[Header] üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é ${this.isMenuOpen ? '–æ—Ç–∫—Ä—ã—Ç–æ' : '–∑–∞–∫—Ä—ã—Ç–æ'}`);
    }

    closeMobileMenu() {
        if (!this.isMenuOpen) return;

        console.log('[Header] üì± –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é');

        this.isMenuOpen = false;

        // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å—ã —Å body
        document.body.classList.remove('mobile-menu-open');

        if (this.mobileToggle) {
            this.mobileToggle.classList.remove('active');
        }

        if (this.mobileMenu) {
            this.mobileMenu.classList.remove('active');
        }

        // –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–∫—Ä–æ–ª–ª–∞
        this.toggleBodyScroll(true);

        console.log('[Header] üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ');
    }

    toggleBodyScroll(enable) {
        if (enable) {
            // –í–∫–ª—é—á–∞–µ–º —Å–∫—Ä–æ–ª–ª
            const scrollY = document.body.style.top;
            document.body.style.overflow = '';
            document.body.style.position = '';
            document.body.style.width = '';
            document.body.style.top = '';
            if (scrollY) {
                window.scrollTo(0, parseInt(scrollY || '0') * -1);
            }
        } else {
            // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª
            const scrollY = window.scrollY;
            document.body.style.overflow = 'hidden';
            document.body.style.position = 'fixed';
            document.body.style.width = '100%';
            document.body.style.top = `-${scrollY}px`;
        }
    }

    setupSmoothScroll() {
        const anchorLinks = document.querySelectorAll('a[data-section], a[href*="#"]');

        anchorLinks.forEach(link => {
            link.addEventListener('click', (e) => {
                const href = link.getAttribute('href');
                let sectionId = link.getAttribute('data-section');

                if (!sectionId && href && href.includes('#')) {
                    sectionId = href.split('#')[1];
                }

                if (sectionId) {
                    const targetElement = document.getElementById(sectionId);

                    if (targetElement) {
                        e.preventDefault();

                        // –†–∞—Å—á–µ—Ç —Å —É—á–µ—Ç–æ–º –≤—ã—Å–æ—Ç—ã —Ö–µ–¥–µ—Ä–∞
                        const headerHeight = this.header.offsetHeight || 80;
                        const targetPosition = targetElement.offsetTop - headerHeight - 20;

                        window.scrollTo({
                            top: Math.max(0, targetPosition),
                            behavior: 'smooth'
                        });

                        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
                        if (this.isMenuOpen) {
                            setTimeout(() => this.closeMobileMenu(), 100);
                        }

                        console.log(`[Header] üéØ –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Å–µ–∫—Ü–∏–∏: ${sectionId}`);
                    }
                }
            });
        });

        console.log(`[Header] üéØ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è ${anchorLinks.length} —Å—Å—ã–ª–æ–∫`);
    }

    updateBadges() {
        try {
            const cartCount = this.getCartCount();
            const ordersCount = this.getOrdersCount();

            this.setBadge(this.cartBadges, cartCount);
            this.setBadge(this.ordersBadges, ordersCount);

            console.log(`[Header] üîÑ –ë–µ–π–¥–∂–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã: –ö–æ—Ä–∑–∏–Ω–∞ ${cartCount}, –ó–∞–∫–∞–∑—ã ${ordersCount}`);
        } catch (error) {
            console.error('[Header] ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–π–¥–∂–µ–π:', error);
        }
    }

    setBadge(badges, count) {
        Object.values(badges).forEach(badge => {
            if (badge) {
                badge.textContent = count;

                if (count > 0) {
                    badge.style.display = 'flex';

                    // –¢–û–õ–¨–ö–û –∞–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è - –ë–ï–ó –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ –ø–æ–∑–∏—Ü–∏–π
                    badge.style.animation = 'none';
                    badge.offsetHeight; // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π reflow
                    badge.style.animation = 'badgeEntry 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55)';
                } else {
                    badge.style.display = 'none';
                }
            }
        });
    }

    getCartCount() {
        // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: CartManager > localStorage > 0
        if (window.CartManager && typeof window.CartManager.getTotalCount === 'function') {
            return window.CartManager.getTotalCount();
        }

        // Fallback –∫ localStorage
        try {
            const cartData = JSON.parse(localStorage.getItem('cartData') || '{}');
            return (cartData.cameraCount || 0) + (cartData.memoryCount || 0);
        } catch (e) {
            console.warn('[Header] ‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è cartData:', e);
            return 0;
        }
    }

    getOrdersCount() {
        // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: OrderManager > localStorage > 0
        if (window.OrderManager && typeof window.OrderManager.getOrdersCount === 'function') {
            return window.OrderManager.getOrdersCount();
        }

        // Fallback –∫ localStorage
        try {
            const orders = JSON.parse(localStorage.getItem('userOrders') || '[]');
            return orders.filter(order => order && order.id).length;
        } catch (e) {
            console.warn('[Header] ‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è orders:', e);
            return 0;
        }
    }

    setupCartManager() {
        // –î–µ–±–∞—É–Ω—Å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–π–¥–∂–µ–π
        let updateTimeout = null;
        const debouncedUpdate = () => {
            if (updateTimeout) clearTimeout(updateTimeout);
            updateTimeout = setTimeout(() => this.updateBadges(), 50);
        };

        // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è
        window.addEventListener('cartUpdated', debouncedUpdate);
        window.addEventListener('ordersUpdated', debouncedUpdate);

        // –°–æ–±—ã—Ç–∏—è localStorage
        window.addEventListener('storage', (e) => {
            if (e.key === 'cartData' || e.key === 'userOrders') {
                console.log(`[Header] üíæ LocalStorage –∏–∑–º–µ–Ω–µ–Ω: ${e.key}`);
                debouncedUpdate();
            }
        });

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        window.addEventListener('focus', debouncedUpdate, { passive: true });

        window.addEventListener('resize', () => {
            this.isMobile = window.innerWidth <= 768;
            // –¢–û–õ–¨–ö–û –æ–±–Ω–æ–≤–ª—è–µ–º –±–µ–π–¥–∂–∏ –±–µ–∑ –ª—é–±—ã—Ö —Å—Ç–∏–ª–µ–π
            setTimeout(() => this.updateBadges(), 100);
        });

        // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 20 —Å–µ–∫—É–Ω–¥
        setInterval(() => this.updateBadges(), 20000);

        console.log('[Header] üîÑ CartManager –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
    }

    // === –ü–£–ë–õ–ò–ß–ù–´–ï –ú–ï–¢–û–î–´ ===

    forceUpdateBadges() {
        console.log('[Header] üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–π–¥–∂–µ–π');
        this.updateBadges();
    }

    setCartCount(count) {
        console.log(`[Header] üõí –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã: ${count}`);
        this.setBadge(this.cartBadges, count);
    }

    setOrdersCount(count) {
        console.log(`[Header] üìã –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—á–µ—Ç—á–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤: ${count}`);
        this.setBadge(this.ordersBadges, count);
    }

    // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    get currentCartCount() {
        return this.getCartCount();
    }

    get currentOrdersCount() {
        return this.getOrdersCount();
    }

    // –ù–û–í–´–ï –ú–ï–¢–û–î–´ –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø GLASSMORPHISM
    forceGlassmorphism(enable = true) {
        if (enable) {
            this.header.classList.add('scrolled');
            console.log('[Header] üé® Glassmorphism –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–µ–Ω');
        } else {
            this.header.classList.remove('scrolled');
            console.log('[Header] üé® Glassmorphism –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω');
        }
    }

    isGlassmorphismActive() {
        return this.header.classList.contains('scrolled');
    }

    setScrollThreshold(threshold) {
        this.scrollThreshold = threshold;
        console.log('[Header] üé® –ù–æ–≤—ã–π –ø–æ—Ä–æ–≥ –¥–ª—è glassmorphism:', threshold, 'px');
        // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        this.handleScroll();
    }

    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ú–æ–±–∏–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ë–ï–ó –õ–û–ì–û–¢–ò–ü–ê –í –ú–ï–ù–Æ
    diagnoseMobile() {
        if (!this.isMobile) {
            console.log('[Header] üíª –≠—Ç–æ –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ');
            return;
        }

        console.log('[Header] üì± –ú–û–ë–ò–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:');
        console.log('- –®–∏—Ä–∏–Ω–∞ —ç–∫—Ä–∞–Ω–∞:', window.innerWidth);
        console.log('- –í—ã—Å–æ—Ç–∞ —ç–∫—Ä–∞–Ω–∞:', window.innerHeight);
        console.log('- User Agent:', navigator.userAgent);
        console.log('- –•–µ–¥–µ—Ä –Ω–∞–π–¥–µ–Ω:', !!this.header);
        console.log('- Glassmorphism –∞–∫—Ç–∏–≤–µ–Ω:', this.isGlassmorphismActive());
        console.log('- Scroll threshold:', this.scrollThreshold, 'px');
        console.log('- –¢–µ–∫—É—â–∏–π scroll:', window.pageYOffset, 'px');

        if (this.header) {
            const rect = this.header.getBoundingClientRect();
            const styles = window.getComputedStyle(this.header);

            console.log('- –†–∞–∑–º–µ—Ä—ã —Ö–µ–¥–µ—Ä–∞:', {
                width: rect.width,
                height: rect.height,
                top: rect.top,
                visible: rect.width > 0 && rect.height > 0
            });

            console.log('- CSS —Å—Ç–∏–ª–∏:', {
                display: styles.display,
                position: styles.position,
                zIndex: styles.zIndex,
                visibility: styles.visibility,
                opacity: styles.opacity,
                background: styles.background,
                backdropFilter: styles.backdropFilter || styles.webkitBackdropFilter
            });
        }

        console.log('- –ú–æ–±–∏–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞:', !!this.mobileToggle);
        console.log('- –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é:', !!this.mobileMenu);
        console.log('- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', this.isInitialized);

        // –ü–†–û–í–ï–†–ö–ê –ù–ê –î–£–ë–õ–ò–†–û–í–ê–ù–ò–ï
        const allMenuToggles = document.querySelectorAll('.mobile-menu-toggle');
        console.log('- –ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é:', allMenuToggles.length);
        if (allMenuToggles.length > 1) {
            console.warn('‚ö†Ô∏è –î–£–ë–õ–ò–†–û–í–ê–ù–ò–ï –ö–ù–û–ü–û–ö –ú–ï–ù–Æ!');
            allMenuToggles.forEach((toggle, index) => {
                const rect = toggle.getBoundingClientRect();
                const styles = window.getComputedStyle(toggle);
                console.log(`  –ö–Ω–æ–ø–∫–∞ ${index + 1}:`, {
                    display: styles.display,
                    position: styles.position,
                    zIndex: styles.zIndex,
                    visible: rect.width > 0 && rect.height > 0
                });
            });
        }

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
        if (this.mobileToggle) {
            const toggleRect = this.mobileToggle.getBoundingClientRect();
            const toggleStyles = window.getComputedStyle(this.mobileToggle);

            console.log('- –ú–æ–±–∏–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Ä–∞–∑–º–µ—Ä—ã:', {
                width: toggleRect.width,
                height: toggleRect.height,
                left: toggleRect.left,
                top: toggleRect.top,
                visible: toggleRect.width > 0 && toggleRect.height > 0
            });

            console.log('- –ú–æ–±–∏–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å—Ç–∏–ª–∏:', {
                display: toggleStyles.display,
                background: toggleStyles.background,
                border: toggleStyles.border,
                zIndex: toggleStyles.zIndex
            });
        }

        // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
        const cartActions = document.querySelector('.site-header .header-actions');
        const cartBtn = document.querySelector('.site-header .header-actions .cart-btn');
        const cartBadge = document.querySelector('.site-header .header-actions .cart-badge');

        if (cartActions) {
            const actionsRect = cartActions.getBoundingClientRect();
            const actionsStyles = window.getComputedStyle(cartActions);

            console.log('- –ö–æ—Ä–∑–∏–Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä:', {
                width: actionsRect.width,
                height: actionsRect.height,
                left: actionsRect.left,
                right: actionsRect.right,
                top: actionsRect.top,
                position: actionsStyles.position,
                rightStyle: actionsStyles.right,
                visible: actionsRect.width > 0 && actionsRect.height > 0,
                outsideScreen: actionsRect.right > window.innerWidth || actionsRect.left < 0
            });
        }

        if (cartBtn) {
            const btnRect = cartBtn.getBoundingClientRect();

            console.log('- –ö–æ—Ä–∑–∏–Ω–∞ –∫–Ω–æ–ø–∫–∞:', {
                width: btnRect.width,
                height: btnRect.height,
                left: btnRect.left,
                right: btnRect.right,
                visible: btnRect.width > 0 && btnRect.height > 0,
                outsideScreen: btnRect.right > window.innerWidth || btnRect.left < 0
            });
        }

        if (cartBadge) {
            const badgeRect = cartBadge.getBoundingClientRect();
            const badgeStyles = window.getComputedStyle(cartBadge);

            console.log('- –°—á–µ—Ç—á–∏–∫ –∫–æ—Ä–∑–∏–Ω—ã:', {
                width: badgeRect.width,
                height: badgeRect.height,
                left: badgeRect.left,
                right: badgeRect.right,
                top: badgeRect.top,
                bottom: badgeRect.bottom,
                position: badgeStyles.position,
                topStyle: badgeStyles.top,
                rightStyle: badgeStyles.right,
                borderRadius: badgeStyles.borderRadius,
                display: badgeStyles.display,
                visible: badgeRect.width > 0 && badgeRect.height > 0,
                outsideScreen: badgeRect.right > window.innerWidth || badgeRect.left < 0 || badgeRect.top < 0
            });
        }

        // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ª–∏–Ω–∏–π –±—É—Ä–≥–µ—Ä–∞
        const burgerLines = document.querySelectorAll('.burger-line');
        console.log('- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∏–Ω–∏–π –±—É—Ä–≥–µ—Ä–∞:', burgerLines.length);

        // –ü–†–û–í–ï–†–Ø–ï–ú –ß–¢–û –†–û–í–ù–û –¢–†–ò –ü–û–õ–û–°–ö–ò
        if (burgerLines.length !== 3) {
            console.error(`‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û–ï –ö–û–õ–ò–ß–ï–°–¢–í–û –ü–û–õ–û–°–û–ö! –û–∂–∏–¥–∞–µ—Ç—Å—è 3, –Ω–∞–π–¥–µ–Ω–æ ${burgerLines.length}`);
        }

        burgerLines.forEach((line, index) => {
            const lineRect = line.getBoundingClientRect();
            const lineStyles = window.getComputedStyle(line);

            console.log(`- –õ–∏–Ω–∏—è ${index + 1}:`, {
                width: lineRect.width,
                height: lineRect.height,
                background: lineStyles.background,
                display: lineStyles.display,
                opacity: lineStyles.opacity,
                visibility: lineStyles.visibility,
                visible: lineRect.width > 0 && lineRect.height > 0 && lineStyles.opacity !== '0' && lineStyles.visibility !== 'hidden'
            });
        });

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
        if (this.mobileMenu) {
            const menuRect = this.mobileMenu.getBoundingClientRect();
            const menuStyles = window.getComputedStyle(this.mobileMenu);

            console.log('- –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é:', {
                width: menuRect.width,
                height: menuRect.height,
                display: menuStyles.display,
                zIndex: menuStyles.zIndex,
                opacity: menuStyles.opacity,
                visibility: menuStyles.visibility
            });

            console.log('- –ö–Ω–æ–ø–∫–∞ –∏ –ª–æ–≥–æ—Ç–∏–ø –Ω–∞–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è –ø–æ–≤–µ—Ä—Ö –º–µ–Ω—é');
        }
    }
}

// === –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –û–¢–õ–ê–î–ö–ê –ú–û–ë–ò–õ–¨–ù–û–ì–û –ú–ï–ù–Æ ===

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–∫—Ä–æ–ª–ª–∞
window.debugMobileScroll = function() {
    console.log('[Mobile] üìú === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ö–†–û–õ–õ–ê ===');

    const mobileMenu = document.querySelector('.mobile-menu');
    const mobileContent = document.querySelector('.mobile-menu-content');
    const mobileNav = document.querySelector('.mobile-nav');
    const mobileActions = document.querySelector('.mobile-actions');

    if (!mobileMenu) {
        console.error('‚ùå –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
        return;
    }

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç–∫—Ä–∞–Ω–µ
    console.log('üì± –≠–∫—Ä–∞–Ω:', {
        width: window.innerWidth,
        height: window.innerHeight,
        availHeight: window.screen.availHeight,
        devicePixelRatio: window.devicePixelRatio,
        orientation: window.orientation || 'unknown'
    });

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ viewport
    console.log('üñºÔ∏è Viewport:', {
        vh: window.innerHeight,
        dvh: document.documentElement.clientHeight,
        visualViewport: window.visualViewport ? {
            height: window.visualViewport.height,
            width: window.visualViewport.width
        } : '–Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è'
    });

    // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º–µ–Ω—é
    if (mobileContent) {
        const contentRect = mobileContent.getBoundingClientRect();
        const contentStyles = window.getComputedStyle(mobileContent);

        console.log('üìã –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –º–µ–Ω—é:', {
            height: contentRect.height,
            maxHeight: contentStyles.maxHeight,
            scrollHeight: mobileContent.scrollHeight,
            clientHeight: mobileContent.clientHeight,
            canScroll: mobileContent.scrollHeight > mobileContent.clientHeight
        });
    }

    // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if (mobileNav) {
        const navRect = mobileNav.getBoundingClientRect();
        const navStyles = window.getComputedStyle(mobileNav);

        console.log('üß≠ –ù–∞–≤–∏–≥–∞—Ü–∏—è:', {
            height: navRect.height,
            scrollHeight: mobileNav.scrollHeight,
            clientHeight: mobileNav.clientHeight,
            overflowY: navStyles.overflowY,
            canScroll: mobileNav.scrollHeight > mobileNav.clientHeight,
            padding: navStyles.padding
        });

        // –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        const navLinks = mobileNav.querySelectorAll('.mobile-nav-link');
        console.log(`üìç –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: ${navLinks.length}`);

        if (navLinks.length > 0) {
            const firstLink = navLinks[0];
            const lastLink = navLinks[navLinks.length - 1];
            const linkHeight = firstLink.getBoundingClientRect().height;

            console.log('üîó –≠–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', {
                linkHeight: linkHeight,
                totalLinksHeight: linkHeight * navLinks.length,
                firstLinkTop: firstLink.getBoundingClientRect().top,
                lastLinkBottom: lastLink.getBoundingClientRect().bottom,
                lastLinkVisible: lastLink.getBoundingClientRect().bottom <= navRect.bottom
            });
        }
    }

    // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ–∫—Ü–∏–∏ –¥–µ–π—Å—Ç–≤–∏–π
    if (mobileActions) {
        const actionsRect = mobileActions.getBoundingClientRect();
        const actionsStyles = window.getComputedStyle(mobileActions);

        console.log('‚ö° –î–µ–π—Å—Ç–≤–∏—è:', {
            height: actionsRect.height,
            maxHeight: actionsStyles.maxHeight,
            scrollHeight: mobileActions.scrollHeight,
            clientHeight: mobileActions.clientHeight,
            overflowY: actionsStyles.overflowY,
            canScroll: mobileActions.scrollHeight > mobileActions.clientHeight
        });

        const actionBtns = mobileActions.querySelectorAll('.mobile-action-btn');
        console.log(`üîò –ö–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π: ${actionBtns.length}`);
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    const addressBarHeight = window.outerHeight - window.innerHeight;
    console.log('üåê –ê–¥—Ä–µ—Å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞:', {
        estimated_height: addressBarHeight,
        outerHeight: window.outerHeight,
        innerHeight: window.innerHeight,
        visible: addressBarHeight > 0
    });
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫—Ä–æ–ª–ª–∞
window.testMobileScroll = function() {
    console.log('[Mobile] üß™ === –¢–ï–°–¢ –°–ö–†–û–õ–õ–ê ===');

    const mobileNav = document.querySelector('.mobile-nav');
    const mobileActions = document.querySelector('.mobile-actions');

    if (mobileNav) {
        console.log('üß≠ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...');

        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –≤–Ω–∏–∑
        mobileNav.scrollTop = mobileNav.scrollHeight;
        console.log(`üìú –ü—Ä–æ–∫—Ä—É—Ç–∏–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤–Ω–∏–∑: ${mobileNav.scrollTop}px`);

        setTimeout(() => {
            // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
            mobileNav.scrollTop = 0;
            console.log('üìú –í–µ—Ä–Ω—É–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤ –Ω–∞—á–∞–ª–æ');
        }, 1000);
    }

    if (mobileActions) {
        console.log('‚ö° –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª –¥–µ–π—Å—Ç–≤–∏–π...');

        setTimeout(() => {
            mobileActions.scrollTop = mobileActions.scrollHeight;
            console.log(`üìú –ü—Ä–æ–∫—Ä—É—Ç–∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏—è –≤–Ω–∏–∑: ${mobileActions.scrollTop}px`);

            setTimeout(() => {
                mobileActions.scrollTop = 0;
                console.log('üìú –í–µ—Ä–Ω—É–ª–∏ –¥–µ–π—Å—Ç–≤–∏—è –≤ –Ω–∞—á–∞–ª–æ');
            }, 1000);
        }, 500);
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∫—Ä–æ–ª–ª–∞)
window.addTestMenuItems = function() {
    console.log('[Mobile] ‚ûï === –î–û–ë–ê–í–õ–ï–ù–ò–ï –¢–ï–°–¢–û–í–´–• –≠–õ–ï–ú–ï–ù–¢–û–í ===');

    const mobileNav = document.querySelector('.mobile-nav');
    const mobileActions = document.querySelector('.mobile-actions');

    if (mobileNav) {
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏
        for (let i = 1; i <= 10; i++) {
            const testLink = document.createElement('a');
            testLink.href = '#';
            testLink.className = 'mobile-nav-link';
            testLink.innerHTML = `
                <span>–¢–µ—Å—Ç–æ–≤—ã–π –ø—É–Ω–∫—Ç ${i}</span>
                <div class="mobile-nav-arrow">‚Üí</div>
            `;
            mobileNav.appendChild(testLink);
        }
        console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ 10 —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
    }

    if (mobileActions) {
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
        for (let i = 1; i <= 5; i++) {
            const testBtn = document.createElement('a');
            testBtn.href = '#';
            testBtn.className = 'mobile-action-btn';
            testBtn.innerHTML = `
                <div class="action-icon">üîß</div>
                <div class="action-content">
                    <span class="action-title">–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ ${i}</span>
                    <span class="action-subtitle">–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏</span>
                </div>
            `;
            mobileActions.appendChild(testBtn);
        }
        console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ 5 —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫—Ä–æ–ª–ª –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    setTimeout(() => {
        window.debugMobileScroll();
        window.testMobileScroll();
    }, 200);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
window.removeTestMenuItems = function() {
    console.log('[Mobile] ‚ûñ === –£–î–ê–õ–ï–ù–ò–ï –¢–ï–°–¢–û–í–´–• –≠–õ–ï–ú–ï–ù–¢–û–í ===');

    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏
    const testLinks = document.querySelectorAll('.mobile-nav-link');
    testLinks.forEach((link, index) => {
        if (link.textContent.includes('–¢–µ—Å—Ç–æ–≤—ã–π –ø—É–Ω–∫—Ç')) {
            link.remove();
        }
    });

    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
    const testBtns = document.querySelectorAll('.mobile-action-btn');
    testBtns.forEach((btn, index) => {
        if (btn.textContent.includes('–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞')) {
            btn.remove();
        }
    });

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —É–¥–∞–ª–µ–Ω—ã');
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
window.fullMobileTest = function() {
    console.log('[Mobile] üéØ === –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–ë–ò–õ–¨–ù–û–ì–û –ú–ï–ù–Æ ===');

    // 1. –ë–∞–∑–æ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    window.debugMobileScroll();

    // 2. –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –µ—Å–ª–∏ –∑–∞–∫—Ä—ã—Ç–æ
    const mobileMenu = document.querySelector('.mobile-menu');
    const mobileToggle = document.querySelector('.mobile-menu-toggle');

    if (mobileMenu && !mobileMenu.classList.contains('active')) {
        console.log('üì± –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é...');
        if (mobileToggle) {
            mobileToggle.click();
        }
    }

    setTimeout(() => {
        // 3. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        window.addTestMenuItems();

        setTimeout(() => {
            // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª
            window.testMobileScroll();

            setTimeout(() => {
                // 5. –£–±–∏—Ä–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
                window.removeTestMenuItems();
                console.log('üéâ –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
            }, 4000);
        }, 1000);
    }, 500);
};

// === –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –í–ö–õ–Æ–ß–ï–ù–ò–ï –°–ö–†–û–õ–õ–ê ===

window.forceEnableScroll = function() {
    console.log('[Mobile] üîß === –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –í–ö–õ–Æ–ß–ï–ù–ò–ï –°–ö–†–û–õ–õ–ê ===');

    const mobileNav = document.querySelector('.mobile-nav');
    const mobileActions = document.querySelector('.mobile-actions');
    const mobileMenuContent = document.querySelector('.mobile-menu-content');

    if (!mobileNav || !mobileActions) {
        console.error('‚ùå –ú–æ–±–∏–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return;
    }

    // === –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ï –°–¢–ò–õ–ò –î–õ–Ø –ù–ê–í–ò–ì–ê–¶–ò–ò ===
    if (mobileNav) {
        mobileNav.style.setProperty('overflow-y', 'scroll', 'important');
        mobileNav.style.setProperty('overflow-x', 'hidden', 'important');
        mobileNav.style.setProperty('max-height', '400px', 'important');
        mobileNav.style.setProperty('-webkit-overflow-scrolling', 'touch', 'important');
        mobileNav.style.setProperty('scrollbar-width', 'thin', 'important');
        mobileNav.style.setProperty('scrollbar-color', 'rgba(255, 255, 255, 0.6) transparent', 'important');

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è CSS
        mobileNav.classList.add('force-scroll');

        console.log('‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è: –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª –≤–∫–ª—é—á–µ–Ω');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const navRect = mobileNav.getBoundingClientRect();
        const canScroll = mobileNav.scrollHeight > mobileNav.clientHeight;
        console.log('üìä –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:', {
            height: navRect.height,
            scrollHeight: mobileNav.scrollHeight,
            clientHeight: mobileNav.clientHeight,
            canScroll: canScroll,
            overflowY: window.getComputedStyle(mobileNav).overflowY
        });
    }

    // === –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ï –°–¢–ò–õ–ò –î–õ–Ø –î–ï–ô–°–¢–í–ò–ô ===
    if (mobileActions) {
        mobileActions.style.setProperty('overflow-y', 'auto', 'important');
        mobileActions.style.setProperty('overflow-x', 'hidden', 'important');
        mobileActions.style.setProperty('max-height', '180px', 'important');
        mobileActions.style.setProperty('-webkit-overflow-scrolling', 'touch', 'important');
        mobileActions.style.setProperty('scrollbar-width', 'thin', 'important');
        mobileActions.style.setProperty('scrollbar-color', 'rgba(255, 255, 255, 0.5) transparent', 'important');

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è CSS
        mobileActions.classList.add('force-scroll');

        console.log('‚úÖ –î–µ–π—Å—Ç–≤–∏—è: –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª –≤–∫–ª—é—á–µ–Ω');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const actionsRect = mobileActions.getBoundingClientRect();
        const canScroll = mobileActions.scrollHeight > mobileActions.clientHeight;
        console.log('üìä –î–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:', {
            height: actionsRect.height,
            scrollHeight: mobileActions.scrollHeight,
            clientHeight: mobileActions.clientHeight,
            canScroll: canScroll,
            overflowY: window.getComputedStyle(mobileActions).overflowY
        });
    }

    // === –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–û–ù–¢–ï–ô–ù–ï–†–ê –ú–ï–ù–Æ ===
    if (mobileMenuContent) {
        mobileMenuContent.style.setProperty('height', '100vh', 'important');
        mobileMenuContent.style.setProperty('height', '100dvh', 'important');
        mobileMenuContent.style.setProperty('max-height', '100vh', 'important');
        mobileMenuContent.style.setProperty('display', 'flex', 'important');
        mobileMenuContent.style.setProperty('flex-direction', 'column', 'important');

        console.log('‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –º–µ–Ω—é: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω');
    }

    // === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ö–†–û–õ–õ–ê ===
    setTimeout(() => {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...');

        if (mobileNav) {
            const oldScrollTop = mobileNav.scrollTop;
            mobileNav.scrollTop = 50;

            setTimeout(() => {
                const newScrollTop = mobileNav.scrollTop;
                if (newScrollTop > oldScrollTop) {
                    console.log('‚úÖ –°–∫—Ä–æ–ª–ª –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –†–ê–ë–û–¢–ê–ï–¢!');
                } else {
                    console.log('‚ùå –°–∫—Ä–æ–ª–ª –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç');
                }

                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
                mobileNav.scrollTop = oldScrollTop;
            }, 100);
        }

        if (mobileActions) {
            const oldScrollTop = mobileActions.scrollTop;
            mobileActions.scrollTop = 20;

            setTimeout(() => {
                const newScrollTop = mobileActions.scrollTop;
                if (newScrollTop > oldScrollTop) {
                    console.log('‚úÖ –°–∫—Ä–æ–ª–ª –¥–µ–π—Å—Ç–≤–∏–π –†–ê–ë–û–¢–ê–ï–¢!');
                } else {
                    console.log('‚ùå –°–∫—Ä–æ–ª–ª –¥–µ–π—Å—Ç–≤–∏–π –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç');
                }

                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
                mobileActions.scrollTop = oldScrollTop;
            }, 200);
        }
    }, 300);

    console.log('üéâ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
};

// === –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï SCROLL HANDLER ===
window.fixScrollHandler = function() {
    console.log('[Header] üîß === –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï SCROLL HANDLER ===');

    if (!window.headerManager) {
        console.error('[Header] ‚ùå HeaderManager –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è...');
        waitForHeaderElement().then(() => {
            initHeader();
            setTimeout(() => {
                if (window.headerManager) {
                    console.log('[Header] ‚úÖ HeaderManager —Å–æ–∑–¥–∞–Ω, –ø–æ–≤—Ç–æ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...');
                    window.fixScrollHandler();
                }
            }, 500);
        });
        return;
    }

    const header = document.getElementById('siteHeader') ||
        document.querySelector('.site-header') ||
        document.querySelector('header');

    if (!header) {
        console.error('[Header] ‚ùå Header —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        console.log('–ü–æ–∏—Å–∫ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤...');
        window.diagnoseGlassmorphism();
        return;
    }

    console.log('[Header] ‚úÖ Header –Ω–∞–π–¥–µ–Ω:', header.tagName, header.id);

    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    if (window.headerManager.handleScroll) {
        window.removeEventListener('scroll', window.headerManager.handleScroll);
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    const scrollHandler = function() {
        const currentScroll = window.pageYOffset;
        const threshold = window.headerManager.scrollThreshold || 20;

        console.log(`[Header] üìú Scroll: ${currentScroll}px (–ø–æ—Ä–æ–≥: ${threshold}px)`);

        if (currentScroll > threshold) {
            if (!header.classList.contains('scrolled')) {
                header.classList.add('scrolled');
                console.log('[Header] üé® ‚úÖ Glassmorphism –í–ö–õ–Æ–ß–ï–ù');
            }
        } else {
            if (header.classList.contains('scrolled')) {
                header.classList.remove('scrolled');
                console.log('[Header] üé® ‚ùå Glassmorphism –í–´–ö–õ–Æ–ß–ï–ù');
            }
        }
    };

    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    window.addEventListener('scroll', scrollHandler, { passive: true });
    window.headerManager.handleScroll = scrollHandler;

    console.log('[Header] ‚úÖ –ù–æ–≤—ã–π scroll handler —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º
    setTimeout(() => {
        console.log('[Header] üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º scroll handler...');
        window.scrollTo(0, 50);

        setTimeout(() => {
            console.log('[Header] üîÑ –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–∫—Ä–æ–ª–ª –≤ –Ω–∞—á–∞–ª–æ');
            window.scrollTo(0, 0);
        }, 1500);
    }, 1000);
};

// === –ë–´–°–¢–†–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê GLASSMORPHISM ===
window.diagnoseGlassmorphism = function() {
    console.log('[Header] üîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê GLASSMORPHISM ===');

    const header = document.getElementById('siteHeader') ||
        document.querySelector('.site-header') ||
        document.querySelector('header');

    if (!header) {
        console.error('‚ùå Header –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:');
        console.log('- Headers:', document.querySelectorAll('header').length);
        console.log('- .site-header:', document.querySelectorAll('.site-header').length);
        console.log('- #siteHeader:', !!document.getElementById('siteHeader'));
        return;
    }

    const currentScroll = window.pageYOffset;
    const hasScrolledClass = header.classList.contains('scrolled');
    const computedStyles = window.getComputedStyle(header);

    console.log('üìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:');
    console.log('- Header –Ω–∞–π–¥–µ–Ω:', header.tagName, `#${header.id}`, `.${header.className}`);
    console.log('- Scroll position:', currentScroll + 'px');
    console.log('- –ö–ª–∞—Å—Å .scrolled:', hasScrolledClass);
    console.log('- Background:', computedStyles.background);
    console.log('- Backdrop-filter:', computedStyles.backdropFilter || computedStyles.webkitBackdropFilter || '–Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
    console.log('- Box-shadow:', computedStyles.boxShadow);
    console.log('- Border-bottom:', computedStyles.borderBottom);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É backdrop-filter
    const supportsBackdropFilter = CSS.supports('backdrop-filter', 'blur(1px)') || CSS.supports('-webkit-backdrop-filter', 'blur(1px)');
    console.log('- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ backdrop-filter:', supportsBackdropFilter);

    if (window.headerManager) {
        console.log('- Scroll threshold:', window.headerManager.scrollThreshold + 'px');
        console.log('- Should be active:', currentScroll > window.headerManager.scrollThreshold);
    }

    // –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å
    console.log('\nüß™ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è...');
    header.classList.add('scrolled');

    setTimeout(() => {
        const newStyles = window.getComputedStyle(header);
        console.log('‚úÖ –ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:');
        console.log('- Background:', newStyles.background);
        console.log('- Backdrop-filter:', newStyles.backdropFilter || newStyles.webkitBackdropFilter || '–Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
        console.log('- Box-shadow:', newStyles.boxShadow !== 'none' ? '‚úÖ –ï—Å—Ç—å' : '‚ùå –ù–µ—Ç');
        console.log('- Border-bottom:', newStyles.borderBottom);

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
        if (currentScroll <= (window.headerManager?.scrollThreshold || 20)) {
            header.classList.remove('scrolled');
            console.log('üîÑ –í–µ—Ä–Ω—É–ª–∏ –∫ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é');
        }
    }, 1000);
};

// === –ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï ===
window.quickFixScroll = function() {
    console.log('[Mobile] ‚ö° === –ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–ö–†–û–õ–õ–ê ===');

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –µ—Å–ª–∏ –∑–∞–∫—Ä—ã—Ç–æ
    const mobileMenu = document.querySelector('.mobile-menu');
    const mobileToggle = document.querySelector('.mobile-menu-toggle');

    if (mobileMenu && !mobileMenu.classList.contains('active') && mobileToggle) {
        console.log('üì± –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é...');
        mobileToggle.click();
    }

    setTimeout(() => {
        window.forceEnableScroll();
        setTimeout(() => {
            window.testMobileScroll();
        }, 500);
    }, 200);
};

// === –§–£–ù–ö–¶–ò–ò –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø GLASSMORPHISM ===
window.testGlassmorphism = function() {
    console.log('[Header] üé® === –¢–ï–°–¢ GLASSMORPHISM –≠–§–§–ï–ö–¢–ê ===');

    if (!window.headerManager) {
        console.error('[Header] ‚ùå HeaderManager –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    console.log('üîç –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:');
    console.log('- Scroll position:', window.pageYOffset);
    console.log('- Scroll threshold:', window.headerManager.scrollThreshold);
    console.log('- Glassmorphism –∞–∫—Ç–∏–≤–µ–Ω:', window.headerManager.isGlassmorphismActive());

    console.log('\nüé≠ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º glassmorphism –Ω–∞ 3 —Å–µ–∫—É–Ω–¥—ã...');
    window.headerManager.forceGlassmorphism(true);

    setTimeout(() => {
        console.log('üé≠ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∫–ª—é—á–∞–µ–º glassmorphism –Ω–∞ 2 —Å–µ–∫—É–Ω–¥—ã...');
        window.headerManager.forceGlassmorphism(false);

        setTimeout(() => {
            console.log('üîÑ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º');
            window.headerManager.handleScroll(); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å–∫—Ä–æ–ª–ª
            console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. Glassmorphism —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ —Å–∫—Ä–æ–ª–ª—É');
        }, 2000);
    }, 3000);
};

window.setGlassmorphismThreshold = function(pixels = 50) {
    console.log(`[Header] üé® –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –ø–æ—Ä–æ–≥: ${pixels}px`);

    if (!window.headerManager) {
        console.error('[Header] ‚ùå HeaderManager –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    window.headerManager.setScrollThreshold(pixels);
    console.log('‚úÖ –ù–æ–≤—ã–π –ø–æ—Ä–æ–≥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–∫—Ä—É—Ç–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É');
};

// === –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –í–ö–õ–Æ–ß–ï–ù–ò–ï –ù–ê –ú–û–ë–ò–õ–¨–ù–´–• ===
if (window.innerWidth <= 768) {
    // –ñ–¥–µ–º –∫–æ–≥–¥–∞ –º–µ–Ω—é –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    document.addEventListener('DOMContentLoaded', () => {
        setTimeout(() => {
            const mobileMenu = document.querySelector('.mobile-menu');
            if (mobileMenu) {
                // –°–ª—É—à–∞–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
                const observer = new MutationObserver((mutations) => {
                    mutations.forEach((mutation) => {
                        if (mutation.target.classList.contains('active')) {
                            console.log('üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ - –ø—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...');
                            setTimeout(() => {
                                window.forceEnableScroll();
                            }, 100);
                        }
                    });
                });

                observer.observe(mobileMenu, {
                    attributes: true,
                    attributeFilter: ['class']
                });

                console.log('üëÄ –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –º–æ–±–∏–ª—å–Ω—ã–º –º–µ–Ω—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
            }
        }, 500);
    });
}

// === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===

let headerInstance = null;

function initHeader() {
    if (headerInstance && headerInstance.isInitialized) {
        console.log('[Header] ‚ö†Ô∏è –£–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return headerInstance;
    }

    try {
        console.log('[Header] üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é...');
        headerInstance = new HeaderManager();

        if (headerInstance && headerInstance.isInitialized) {
            // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –≠–∫—Å–ø–æ—Ä—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å
            window.headerManager = headerInstance;
            window.HeaderManager = HeaderManager;

            console.log('[Header] ‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            console.log('[Header] üé® –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è glassmorphism:');
            console.log('  - diagnoseGlassmorphism() - –±—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞');
            console.log('  - testGlassmorphism() - —Ç–µ—Å—Ç —ç—Ñ—Ñ–µ–∫—Ç–∞');
            console.log('  - setGlassmorphismThreshold(pixels) - –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä–æ–≥');
            console.log('  - headerManager.forceGlassmorphism(true/false) - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª/–≤—ã–∫–ª');
            console.log('  - window.scrollTo(0, 50) - –ø—Ä–æ–∫—Ä—É—Ç–∏—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');

            // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
            setTimeout(() => {
                if (window.headerManager) {
                    console.log('[Header] ‚úÖ window.headerManager –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω');
                } else {
                    console.error('[Header] ‚ùå window.headerManager –ù–ï –°–û–ó–î–ê–ù!');
                    window.headerManager = headerInstance;
                }
            }, 100);

            // –ü–µ—Ä–≤–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–π–¥–∂–µ–π
            setTimeout(() => headerInstance.forceUpdateBadges(), 300);

            // –ú–æ–±–∏–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            if (window.innerWidth <= 768) {
                setTimeout(() => {
                    headerInstance.diagnoseMobile();
                    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
                    window.fixMenuDuplication();
                }, 500);
            }

            return headerInstance;
        } else {
            console.error('[Header] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å');
            return null;
        }

    } catch (error) {
        console.error('[Header] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
        return null;
    }
}

// === –ê–í–¢–û–ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –° –ü–†–û–í–ï–†–ö–û–ô DOM ===

function waitForHeaderElement() {
    return new Promise((resolve) => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Å–µ–π—á–∞—Å
        const header = document.getElementById('siteHeader') ||
            document.querySelector('.site-header') ||
            document.querySelector('header');

        if (header) {
            console.log('[Header] ‚úÖ –≠–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω —Å—Ä–∞–∑—É:', header.tagName, header.id);
            resolve(header);
            return;
        }

        // –ï—Å–ª–∏ –Ω–µ—Ç - –∂–¥–µ–º —á–µ—Ä–µ–∑ MutationObserver
        console.log('[Header] ‚è≥ –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM...');

        const observer = new MutationObserver((mutations) => {
            const header = document.getElementById('siteHeader') ||
                document.querySelector('.site-header') ||
                document.querySelector('header');

            if (header) {
                console.log('[Header] ‚úÖ –≠–ª–µ–º–µ–Ω—Ç –ø–æ—è–≤–∏–ª—Å—è –≤ DOM:', header.tagName, header.id);
                observer.disconnect();
                resolve(header);
            }
        });

        observer.observe(document.body, {
            childList: true,
            subtree: true
        });

        // –¢–∞–π–º–∞—É—Ç –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Ç–∞–∫ –∏ –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è
        setTimeout(() => {
            observer.disconnect();
            console.error('[Header] ‚ùå –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∑–∞ 10 —Å–µ–∫—É–Ω–¥!');
            resolve(null);
        }, 10000);
    });
}

if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', async () => {
        console.log('[Header] üìÑ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∏—â–µ–º header...');
        await waitForHeaderElement();
        setTimeout(initHeader, 50);
    });
} else {
    console.log('[Header] üìÑ DOM —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –∏—â–µ–º header...');
    waitForHeaderElement().then(() => {
        setTimeout(initHeader, 100);
    });
}

// === –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ú–û–ë–ò–õ–¨–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===

// –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
if (window.innerWidth <= 768) {
    console.log('[Header] üì± –ú–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏...');

    let mobileRetries = 0;
    const maxMobileRetries = 3;

    const mobileInit = setInterval(() => {
        if (!headerInstance || !headerInstance.isInitialized) {
            mobileRetries++;
            console.log(`[Header] üì± –ú–æ–±–∏–ª—å–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ ${mobileRetries}/${maxMobileRetries}`);
            initHeader();

            if (mobileRetries >= maxMobileRetries) {
                clearInterval(mobileInit);
                console.error('[Header] üì± –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º –ø–æ—Å–ª–µ', maxMobileRetries, '–ø–æ–ø—ã—Ç–æ–∫');
            }
        } else {
            clearInterval(mobileInit);
            console.log('[Header] üì± –ú–æ–±–∏–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
            setTimeout(() => {
                window.fixMenuDuplication();
            }, 100);
        }
    }, 300);
}

// === –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° CART-MANAGER ===

function waitForCartManager() {
    if (window.CartManager && headerInstance) {
        console.log('[Header] üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CartManager');

        // –ü–∞—Ç—á–∏–º –º–µ—Ç–æ–¥ updateCartCounter –≤ CartManager
        if (typeof window.CartManager.updateCartCounter === 'function') {
            const originalUpdate = window.CartManager.updateCartCounter.bind(window.CartManager);

            window.CartManager.updateCartCounter = function() {
                originalUpdate();
                if (headerInstance) {
                    setTimeout(() => headerInstance.updateBadges(), 50);
                }
            };

            console.log('[Header] ‚úÖ CartManager –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω');
        }

        // –ü–µ—Ä–≤–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        setTimeout(() => {
            if (headerInstance) {
                headerInstance.forceUpdateBadges();
            }
        }, 100);

    } else if (!window.CartManager) {
        setTimeout(waitForCartManager, 100);
    }
}

setTimeout(waitForCartManager, 200);

// === –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===

window.initHeader = initHeader;

window.updateHeaderBadges = function() {
    if (headerInstance && headerInstance.isInitialized) {
        headerInstance.forceUpdateBadges();
        console.log('[Header] üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ');
    } else {
        console.warn('[Header] ‚ö†Ô∏è Header –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }
};

// –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º
window.fixAllMobileIssues = function() {
    console.log('[Header] üîß === –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –ú–û–ë–ò–õ–¨–ù–´–• –ü–†–û–ë–õ–ï–ú ===');
    window.fixMenuDuplication();
    window.fixMobileCart();
    window.fixScrollHandler();
    window.quickFixScroll();
    window.debugMobileHeader();
};

// –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –î–£–ë–õ–ò–†–û–í–ê–ù–ò–Ø
window.fixMenuDuplication = function() {
    console.log('[Header] üîß === –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –î–£–ë–õ–ò–†–û–í–ê–ù–ò–Ø –ö–ù–û–ü–û–ö –ú–ï–ù–Æ ===');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫–∏
    const allMenuToggles = document.querySelectorAll('.mobile-menu-toggle');
    console.log('–ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é:', allMenuToggles.length);

    if (allMenuToggles.length > 1) {
        console.log('–£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –∫–Ω–æ–ø–∫–∏...');
        // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é –∫–Ω–æ–ø–∫—É, –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∫—Ä—ã–≤–∞–µ–º
        allMenuToggles.forEach((toggle, index) => {
            if (index > 0) {
                toggle.style.display = 'none';
                toggle.style.visibility = 'hidden';
                toggle.style.opacity = '0';
                console.log(`–°–∫—Ä—ã—Ç–∞ –∫–Ω–æ–ø–∫–∞ ${index + 1}`);
            }
        });
        console.log('‚úÖ –ö–Ω–æ–ø–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
    } else {
        console.log('‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–æ—Å–∫–∏
    const allBurgerLines = document.querySelectorAll('.burger-line');
    console.log('–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–æ—Å–æ–∫ –±—É—Ä–≥–µ—Ä–∞:', allBurgerLines.length);

    if (allBurgerLines.length !== 3) {
        console.warn(`‚ö†Ô∏è –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û–ï –ö–û–õ–ò–ß–ï–°–¢–í–û –ü–û–õ–û–°–û–ö! –û–∂–∏–¥–∞–µ—Ç—Å—è 3, –Ω–∞–π–¥–µ–Ω–æ ${allBurgerLines.length}`);
    } else {
        console.log('‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–æ—Å–æ–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ');

        // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –≤—Å–µ –ø–æ–ª–æ—Å–∫–∏ –≤–∏–¥–∏–º—ã
        allBurgerLines.forEach((line, index) => {
            line.style.display = 'block';
            line.style.opacity = '1';
            line.style.visibility = 'visible';
        });
    }
};

// –§—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–±–∏–ª—å–Ω–æ–π –∫–æ—Ä–∑–∏–Ω—ã - –¢–û–õ–¨–ö–û –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
window.fixMobileCart = function() {
    console.log('[Header] üîß === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ú–û–ë–ò–õ–¨–ù–û–ô –ö–û–†–ó–ò–ù–´ ===');

    const cartActions = document.querySelector('.site-header .header-actions');
    const cartBadge = document.querySelector('.site-header .header-actions .cart-badge');

    if (cartActions) {
        const rect = cartActions.getBoundingClientRect();
        console.log('–ö–æ—Ä–∑–∏–Ω–∞:', {
            left: rect.left,
            right: rect.right,
            width: rect.width,
            outsideScreen: rect.right > window.innerWidth
        });

        if (rect.right > window.innerWidth) {
            console.error('‚ùå –ö–æ—Ä–∑–∏–Ω–∞ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã —ç–∫—Ä–∞–Ω–∞!');
            console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ CSS –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è @media (max-width: 768px)');
        } else {
            console.log('‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —ç–∫—Ä–∞–Ω–∞');
        }
    }

    if (cartBadge) {
        const badgeRect = cartBadge.getBoundingClientRect();
        const badgeStyles = window.getComputedStyle(cartBadge);
        console.log('–°—á–µ—Ç—á–∏–∫:', {
            top: badgeRect.top,
            width: badgeRect.width,
            height: badgeRect.height,
            borderRadius: badgeStyles.borderRadius,
            isRound: badgeStyles.borderRadius === '50%' || parseFloat(badgeStyles.borderRadius) >= Math.min(badgeRect.width, badgeRect.height) / 2
        });
    }
};

// –ú–æ–±–∏–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
window.debugMobileHeader = function() {
    console.log('[Header] üîç === –ú–û–ë–ò–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê ===');
    console.log('–†–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞:', window.innerWidth + 'x' + window.innerHeight);
    console.log('User Agent:', navigator.userAgent);

    if (headerInstance && headerInstance.isInitialized) {
        headerInstance.diagnoseMobile();
    } else {
        console.error('[Header] ‚ùå HeaderInstance –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...');
        initHeader();
    }
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ (—Ç–æ–ª—å–∫–æ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö)
if (window.innerWidth <= 768) {
    document.addEventListener('DOMContentLoaded', () => {
        setTimeout(() => {
            console.log('[Header] üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...');
            console.log('[Header] üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:');
            console.log('  - diagnoseGlassmorphism() - –ø–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∞');
            console.log('  - fixScrollHandler() - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ scroll handler');
            console.log('  - testGlassmorphism() - —Ç–µ—Å—Ç glassmorphism —ç—Ñ—Ñ–µ–∫—Ç–∞');
            console.log('  - setGlassmorphismThreshold(50) - –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä–æ–≥ —Å–∫—Ä–æ–ª–ª–∞');
            console.log('  - window.scrollTo(0, 50) - –ø—Ä–æ–∫—Ä—É—Ç–∏—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
            console.log('  - fullMobileTest() - –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ');
            console.log('  - debugMobileScroll() - –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∫—Ä–æ–ª–ª–∞');
            console.log('  - forceEnableScroll() - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–∞');
            console.log('  - quickFixScroll() - –±—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å —Ç–µ—Å—Ç–æ–º');
            console.log('  - fixAllMobileIssues() - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º');
            console.log('[Header] üåü –î–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: diagnoseGlassmorphism()');
        }, 1000);
    });
}

// === –≠–ö–°–ü–û–†–¢ ===

if (typeof module !== 'undefined' && module.exports) {
    module.exports = { HeaderManager, initHeader };
}

console.log('[Header] üéâ –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Å –Ω–∞—Å—Ç–æ—è—â–∏–º glassmorphism —ç—Ñ—Ñ–µ–∫—Ç–æ–º –∑–∞–≥—Ä—É–∂–µ–Ω!');
console.log('[Header] üîç –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞ header —ç–ª–µ–º–µ–Ω—Ç–∞ –∞–∫—Ç–∏–≤–Ω–∞');
console.log('[Header] üé® –ü—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ >20px –ø–æ—è–≤–∏—Ç—Å—è —Å—Ç–µ–∫–ª—è–Ω–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç —Å —Ä–∞–∑–º—ã—Ç–∏–µ–º —Ñ–æ–Ω–∞');

// === –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê –ß–ï–†–ï–ó 3 –°–ï–ö–£–ù–î–´ ===
setTimeout(() => {
    if (!window.headerManager) {
        console.warn('[Header] ‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: HeaderManager –Ω–µ —Å–æ–∑–¥–∞–Ω! –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...');
        waitForHeaderElement().then(() => {
            initHeader();
            setTimeout(() => {
                if (window.headerManager) {
                    window.fixScrollHandler();
                }
            }, 500);
        });
    } else {
        console.log('[Header] ‚úÖ HeaderManager —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ scroll handler
        setTimeout(() => {
            const originalScroll = window.pageYOffset;
            window.scrollTo(0, 30);

            setTimeout(() => {
                const header = document.getElementById('siteHeader') ||
                    document.querySelector('.site-header') ||
                    document.querySelector('header');

                if (header && !header.classList.contains('scrolled')) {
                    console.warn('[Header] ‚ö†Ô∏è Scroll handler –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª! –ò—Å–ø—Ä–∞–≤–ª—è–µ–º...');
                    window.fixScrollHandler();
                } else {
                    console.log('[Header] ‚úÖ Scroll handler —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
                    console.log('[Header] üé® Glassmorphism —ç—Ñ—Ñ–µ–∫—Ç –∞–∫—Ç–∏–≤–µ–Ω');
                }

                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
                window.scrollTo(0, originalScroll);
            }, 200);
        }, 1000);
    }
}, 3000);